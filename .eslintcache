[{"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\React\\path-finding-visualizer\\src\\index.js":"1","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\React\\path-finding-visualizer\\src\\App.js":"2","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\React\\path-finding-visualizer\\src\\reportWebVitals.js":"3","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\React\\path-finding-visualizer\\src\\components\\PathVisualizer\\PathVisualizer.js":"4","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\React\\path-finding-visualizer\\src\\components\\Node\\Node.js":"5","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\React\\path-finding-visualizer\\src\\algorithms\\dijkstra.js":"6","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\React\\path-finding-visualizer\\src\\visualizers\\dijkstra.visualizers.js":"7","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\React\\path-finding-visualizer\\src\\algorithms\\index.js":"8","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\React\\path-finding-visualizer\\src\\algorithms\\dfs.js":"9","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\React\\path-finding-visualizer\\src\\algorithms\\bfs.js":"10","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\React\\path-finding-visualizer\\src\\algorithms\\astar.js":"11","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\React\\path-finding-visualizer\\src\\visualizers\\index.js":"12","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\React\\path-finding-visualizer\\src\\visualizers\\bfs.visualizers.js":"13","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\React\\path-finding-visualizer\\src\\visualizers\\dfs.visualizers.js":"14"},{"size":500,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":363,"mtime":1608202484930,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":5317,"mtime":1608884299516,"results":"19","hashOfConfig":"16"},{"size":628,"mtime":1608209679555,"results":"20","hashOfConfig":"16"},{"size":2396,"mtime":1608225231582,"results":"21","hashOfConfig":"16"},{"size":1010,"mtime":1608286556835,"results":"22","hashOfConfig":"16"},{"size":231,"mtime":1608522989853,"results":"23","hashOfConfig":"16"},{"size":1508,"mtime":1608884263684,"results":"24","hashOfConfig":"16"},{"size":1288,"mtime":1608479523455,"results":"25","hashOfConfig":"16"},{"size":34,"mtime":1608522954799,"results":"26","hashOfConfig":"16"},{"size":210,"mtime":1608530264314,"results":"27","hashOfConfig":"16"},{"size":263,"mtime":1608530071792,"results":"28","hashOfConfig":"16"},{"size":789,"mtime":1608884339979,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"151wpan",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\React\\path-finding-visualizer\\src\\index.js",[],["63","64"],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\React\\path-finding-visualizer\\src\\App.js",["65"],"import React, { Component } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport PathVisualizer from './components/PathVisualizer/PathVisualizer';\nimport { Container } from \"reactstrap\";\n\nclass App extends Component {\n  state = {  }\n  render() { \n    return ( \n      <div>\n        <PathVisualizer />\n      </div>\n     );\n  }\n}\n \nexport default App;","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\React\\path-finding-visualizer\\src\\reportWebVitals.js",[],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\React\\path-finding-visualizer\\src\\components\\PathVisualizer\\PathVisualizer.js",["66","67","68"],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\React\\path-finding-visualizer\\src\\components\\Node\\Node.js",["69"],"import React, { Component } from 'react';\r\nimport \"./Node.css\";\r\n\r\nconst Node = (props) => {\r\n    const { row, col, isStart, isFinish, isWall, onMouseDown, onMouseEnter, onMouseUp } = props;\r\n    const extraClassName = isStart ? 'node-start' : isFinish ? 'node-finish' : isWall ? 'node-wall' : '' ; \r\n\r\n    return ( \r\n        <div\r\n            id={`node-${row}-${col}`}\r\n            className={`node ${extraClassName}`}\r\n            onMouseDown={() => onMouseDown(row, col)}\r\n            onMouseEnter={() => onMouseEnter(row, col)}\r\n            onMouseUp={() => onMouseUp()}\r\n        ></div>\r\n     );\r\n}\r\n \r\nexport default Node;","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\React\\path-finding-visualizer\\src\\algorithms\\dijkstra.js",[],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\React\\path-finding-visualizer\\src\\visualizers\\dijkstra.visualizers.js",[],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\React\\path-finding-visualizer\\src\\algorithms\\index.js",[],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\React\\path-finding-visualizer\\src\\algorithms\\dfs.js",["70"],"export function dfs(grid, startNode, finishNode) {\r\n  const visitedNodesInOrder = [];\r\n  const st = [];\r\n  st.push(startNode);\r\n  while (st.length) {\r\n    const currNode = st.pop();\r\n    if (currNode === finishNode)\r\n      return visitedNodesInOrder;\r\n    if ((currNode.isStart || !currNode.isVisited) && !currNode.isWall) {\r\n      currNode.isVisited = true;\r\n      visitedNodesInOrder.push(currNode);\r\n      const { row, col } = currNode;\r\n      const next = getNextNode(grid, row, col, st, currNode);\r\n    }\r\n  }\r\n}\r\n\r\nfunction getNextNode(grid, row, col, st,currNode) {\r\n  if (row > 0) {\r\n    const next = grid[row - 1][col];\r\n    if (!next.isVisited) {\r\n      st.push(next);\r\n      next.previousNode = currNode;\r\n    }\r\n  }\r\n  if (row < grid.length - 1) {\r\n    const next = grid[row + 1][col];\r\n    if (!next.isVisited) {\r\n      st.push(next);\r\n      next.previousNode = currNode;\r\n    }\r\n  }\r\n  if (col < grid[0].length - 1) {\r\n    const next = grid[row][col + 1];\r\n    if (!next.isVisited) {\r\n      st.push(next);\r\n      next.previousNode = currNode;\r\n    }\r\n  }\r\n  if (col > 0) {\r\n    const next = grid[row][col - 1];\r\n    if (!next.isVisited) {\r\n      st.push(next);\r\n      next.previousNode = currNode;\r\n    }\r\n  }\r\n}\r\n\r\nexport function getNodesInShortestPathOrderDFS(finishNode) {\r\n  const nodesInShortestPath = [];\r\n  let currNode = finishNode;\r\n  while (currNode !== null) {\r\n    nodesInShortestPath.unshift(currNode);\r\n    currNode = currNode.previousNode;\r\n  }\r\n  return nodesInShortestPath;\r\n}","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\React\\path-finding-visualizer\\src\\algorithms\\bfs.js",["71"],"export function bfs(grid, startNode, finishNode) {\r\n    console.log(\"bfs here\")\r\n    const visitedNodesInOrder = [];\r\n    const unvisitedNeighbors = getAllNodes(grid);\r\n    let q = [];\r\n    let explored = [];\r\n    explored.push(startNode);\r\n    q.push(startNode);\r\n    while (q.length) {\r\n        let curr = q.shift();\r\n        visitedNodesInOrder.push(curr);\r\n        curr.isVisited = true;\r\n        if (curr === finishNode)\r\n            return visitedNodesInOrder;\r\n        let currNeighbours = getUnvisitedNeighbors(curr, grid);\r\n        currNeighbours.forEach(neighbor => {\r\n            if (!explored.includes(neighbor))\r\n                q.push(neighbor);\r\n        })\r\n    }\r\n    return visitedNodesInOrder;\r\n}\r\n\r\nfunction getAllNodes(grid) {\r\n  const nodes = [];\r\n  for (const row of grid) {\r\n    for (const node of row) {\r\n      nodes.push(node);\r\n    }\r\n  }\r\n  return nodes;\r\n}\r\n\r\nfunction getUnvisitedNeighbors(node, grid) {\r\n  const neighbors = [];\r\n  const {col, row} = node;\r\n  if (row > 0) neighbors.push(grid[row - 1][col]);\r\n  if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\r\n  if (col > 0) neighbors.push(grid[row][col - 1]);\r\n  if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\r\n  return neighbors.filter(neighbor => !neighbor.isVisited);\r\n}","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\React\\path-finding-visualizer\\src\\algorithms\\astar.js",[],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\React\\path-finding-visualizer\\src\\visualizers\\index.js",[],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\React\\path-finding-visualizer\\src\\visualizers\\bfs.visualizers.js",[],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\React\\path-finding-visualizer\\src\\visualizers\\dfs.visualizers.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":4,"column":10,"nodeType":"78","messageId":"79","endLine":4,"endColumn":19},{"ruleId":"76","severity":1,"message":"80","line":5,"column":53,"nodeType":"78","messageId":"79","endLine":5,"endColumn":56},{"ruleId":"76","severity":1,"message":"81","line":5,"column":58,"nodeType":"78","messageId":"79","endLine":5,"endColumn":63},{"ruleId":"76","severity":1,"message":"82","line":6,"column":39,"nodeType":"78","messageId":"79","endLine":6,"endColumn":49},{"ruleId":"76","severity":1,"message":"83","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":26},{"ruleId":"76","severity":1,"message":"84","line":13,"column":13,"nodeType":"78","messageId":"79","endLine":13,"endColumn":17},{"ruleId":"76","severity":1,"message":"85","line":4,"column":11,"nodeType":"78","messageId":"79","endLine":4,"endColumn":29},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'bfs' is defined but never used.","'astar' is defined but never used.","'animateBFS' is defined but never used.","'Component' is defined but never used.","'next' is assigned a value but never used.","'unvisitedNeighbors' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]